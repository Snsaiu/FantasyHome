<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gardener.Base</name>
    </assembly>
    <members>
        <member name="T:Gardener.ServiceBase`3">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
            <typeparam name="TKey">数据实体主键类型</typeparam>
        </member>
        <member name="F:Gardener.ServiceBase`3._repository">
            <summary>
            TEntity Repository
            </summary>
        </member>
        <member name="M:Gardener.ServiceBase`3.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.ServiceBase`3.Insert(`1)">
            <summary>
            添加
            </summary>
            <remarks>
            添加一条数据
            </remarks>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Update(`1)">
            <summary>
            更新
            </summary>
            <remarks>
            更新一条数据
            </remarks>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Delete(`2)">
            <summary>
            删除
            </summary>
            <remarks>
            根据主键删除一条数据
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Deletes(`2[])">
            <summary>
            批量删除
            </summary>
            <remarks>
            根据多个主键批量删除
            </remarks>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.FakeDelete(`2)">
            <summary>
            逻辑删除
            </summary>
            <remarks>
            根据主键逻辑删除
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.FakeDeletes(`2[])">
            <summary>
            批量逻辑删除
            </summary>
            <remarks>
            根据多个主键批量逻辑删除
            </remarks>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Get(`2)">
            <summary>
            根据主键获取
            </summary>
            <remarks>
            根据主键查找一条数据
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.GetAll">
            <summary>
            查询所有
            </summary>
            <remarks>
            查找到所有数据
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.GetAllUsable">
            <summary>
            查询所有可以用的
            </summary>
            <remarks>
            查询所有可以用的(在有IsDelete、IsLock字段时会自动过滤)
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.GetPage(System.Int32,System.Int32)">
            <summary>
            分页查询
            </summary>
            <remarks>
            根据分页参数，分页获取数据
            </remarks>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Lock(`2,System.Boolean)">
            <summary>
            锁定
            </summary>
            <remarks>
            根据主键锁定或解锁数据（必须有IsLock才能生效）
            </remarks>
            <param name="id"></param>
            <param name="isLocked"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.ServiceBase`3.Search(Gardener.EntityFramwork.Dto.PageRequest)">
            <summary>
            搜索
            </summary>
            <remarks>
            搜索数据
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.ServiceBase`1">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
        </member>
        <member name="M:Gardener.ServiceBase`1.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.ServiceBase`2">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
        </member>
        <member name="M:Gardener.ServiceBase`2.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <param name="repository"></param>
        </member>
    </members>
</doc>
