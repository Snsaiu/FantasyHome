<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gardener.Application</name>
    </assembly>
    <members>
        <member name="T:Gardener.Application.PagedQueryableExtensions">
            <summary>
            分部拓展类
            </summary>
        </member>
        <member name="M:Gardener.Application.PagedQueryableExtensions.ToPagedList``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.PagedQueryableExtensions.ToPagedList``1(System.Linq.IQueryable{``0},Gardener.Application.Dtos.PagedSearchBaseInfo)">
            <summary>
            分页拓展
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="pagedSearchBaseInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.PagedQueryableExtensions.ToPagedListAsync``1(System.Linq.IQueryable{``0},System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            分页拓展
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.PagedQueryableExtensions.ToPagedListAsync``1(System.Linq.IQueryable{``0},Gardener.Application.Dtos.PagedSearchBaseInfo,System.Threading.CancellationToken)">
            <summary>
            分页拓展
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="pagedSearchBaseInfo"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.PagedQueryableExtensions.OrderConditions``1(System.Linq.IQueryable{``0},Gardener.Application.Dtos.SearchSort[])">
            <summary>
            多字段排序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="orderConditions"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.ServiceBase`3">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
            <typeparam name="TKey">数据实体主键类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Insert(`1)">
            <summary>
            新增一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Update(`1)">
            <summary>
            更新一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Delete(`2)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Deletes(`2[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.FakeDelete(`2)">
            <summary>
            删除一条(逻辑删除)
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.FakeDeletes(`2[])">
            <summary>
            删除一条(逻辑删除)
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Get(`2)">
            <summary>
            查询一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.GetAll">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.GetPage(System.Int32,System.Int32)">
            <summary>
            分页查询
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Lock(`2,System.Boolean)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="isLocked"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.ServiceBase`1">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`1.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.ServiceBase`2">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`2.#ctor(Furion.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.SystemManager.AttachmentService">
            <summary>
            附件服务
            </summary>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.Attachment},Gardener.Core.FileStore.IFileStoreService)">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="fileStoreService"></param>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Upload(Gardener.Application.Dtos.UploadAttachmentInput,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传附件
            </summary>
            <param name="input"></param>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Insert(Gardener.Application.Dtos.AttachmentDto)">
            <summary>
            新增一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Update(Gardener.Application.Dtos.AttachmentDto)">
            <summary>
            更新一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Delete(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Deletes(System.Guid[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:Gardener.Application.SystemManager.AttachmentService.Search(Gardener.Application.Dtos.AttachmentSearchInput)">
            <summary>
            搜索附件
            </summary>
            <param name="searchInput"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.SystemManager.AuditEntityService">
            <summary>
            审计数据服务
            </summary>
        </member>
        <member name="M:Gardener.Application.SystemManager.AuditEntityService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.AuditEntity})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.Application.SystemManager.AuditEntityService.Search(Gardener.Application.Dtos.AuditEntitySearchInput)">
            <summary>
            搜索
            </summary>
            <param name="searchInput"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.SystemManager.AuditOperationService">
            <summary>
            审计操作服务
            </summary>
        </member>
        <member name="M:Gardener.Application.SystemManager.AuditOperationService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.AuditOperation})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.Application.SystemManager.AuditOperationService.Search(Gardener.Application.Dtos.AuditOperationSearchInput)">
            <summary>
            搜索
            </summary>
            <param name="searchInput"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.AuthorizeService">
            <summary>
            用户中心服务
            </summary>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.User},Gardener.Core.IAuthorizationManager,Gardener.Core.IJwtBearerService,Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.Resource},Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.UserRole})">
            <summary>
            角色管理服务
            </summary>
            <param name="httpContextAccessor"></param>
            <param name="userRepository"></param>
            <param name="authorizationManager"></param>
            <param name="jwtBearerService"></param>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.Login(Gardener.Application.Dtos.LoginInput)">
            <summary>
            登录
            </summary>
            <param name="input"></param>
            <remarks>管理员：admin/admin；普通用户：testuser/testuser</remarks>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.RefreshToken(Gardener.Application.Dtos.RefreshTokenInput)">
            <summary>
            刷新Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.RemoveCurrentUserRefreshToken">
            <summary>
            移除当前用户token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.GetCurrentUserRoles">
            <summary>
            查看用户角色
            </summary>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.GetCurrentUser">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.GetCurrentUserResources(Gardener.Enums.ResourceType[])">
            <summary>
            
            </summary>
            <param name="resourceTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.AuthorizeService.GetCurrentUserMenus">
            <summary>
            获取当前用户的所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.ResourceService">
            <summary>
            资源服务
            </summary>
        </member>
        <member name="M:Gardener.Application.ResourceService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.Resource})">
            <summary>
            资源服务
            </summary>
            <param name="resourceRepository"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gardener.Application.ResourceService.GetChildren(System.Guid)" -->
        <member name="M:Gardener.Application.ResourceService.GetRoot">
            <summary>
            返回根节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ResourceService.GetSeedData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ResourceService.GetTree">
            <summary>
            查询所有资源 按树形结构返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ResourceService.Insert(Gardener.Application.Dtos.ResourceDto)">
            <summary>
            添加资源
            </summary>
            <param name="resourceDto"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.RoleService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:Gardener.Application.RoleService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.Role},Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.RoleResource})">
            <summary>
            角色服务
            </summary>
            <param name="roleRepository"></param>
            <param name="roleResourceRepository"></param>
        </member>
        <member name="M:Gardener.Application.RoleService.Search(System.String,System.Int32,System.Int32)">
            <summary>
            搜索角色
            </summary>
            <param name="name">角色名称</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.RoleService.Resource(System.Int32,System.Guid[])">
            <summary>
            为角色分配权限（重置）
            </summary>
        </member>
        <member name="M:Gardener.Application.RoleService.DeleteResource(System.Int32)">
            <summary>
            删除角色的所有资源
            </summary>
            <param name="roleId"></param>
        </member>
        <member name="M:Gardener.Application.RoleService.GetEffective">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.RoleService.GetResource(System.Int32)">
            <summary>
            获取角色所有资源
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.RoleService.GetRoleResourceSeedData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.UserService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:Gardener.Application.UserService.#ctor(Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.User},Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.UserExtension},Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.UserRole},Furion.DatabaseAccessor.IRepository{Gardener.Core.Entites.Role})">
            <summary>
            用户服务
            </summary>
            <param name="userRepository"></param>
            <param name="userExtensionRepository"></param>
            <param name="userRoleRepository"></param>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Gardener.Application.UserService.GetRoles(System.Int32)">
            <summary>
            查看用户角色
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.GetResources(System.Int32)">
            <summary>
            查看用户权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.Search(System.String,System.Int32,System.Int32)">
            <summary>
            搜索用户
            </summary>
            <param name="name"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.Update(Gardener.Application.Dtos.UserDto)">
            <summary>
            更新一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.Insert(Gardener.Application.Dtos.UserDto)">
            <summary>
            新增一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.Get(System.Int32)">
            <summary>
            查询一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.UserService.Role(System.Int32,System.Int32[])">
            <summary>
            设置用户角色
            </summary>
            <param name="userId"></param>
            <param name="roleIds"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserService.UpdateAvatar(Gardener.Application.Dtos.UserUpdateAvatarInput)">
            <summary>
            更新头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
