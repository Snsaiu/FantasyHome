<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gardener.Application</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Authorization.ApiSecurityDefineAttribute">
            <summary>
            api 安全定义特效
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authorization.ApiSecurityDefineAttribute.#ctor(System.String)">
            <summary>
            api 安全定义特效
            </summary>
            <param name="apiName">api名称</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authorization.ApiSecurityDefineAttribute.ApiName">
            <summary>
            api名称
            </summary>
        </member>
        <member name="T:Gardener.Application.Extensions.DynamicApiResourceCollectApplicationModelConvention">
            <summary>
            收集pi资源
            </summary>
        </member>
        <member name="M:Gardener.Application.Extensions.DynamicApiResourceCollectApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            
            </summary>
            <param name="application"></param>
        </member>
        <member name="T:Gardener.Application.Extensions.DynamicApiStorageExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gardener.Application.Extensions.DynamicApiStorageExtension.AddDynamicApiStorage(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            添加动态接口控制器服务 
            </summary>
            <param name="mvcBuilder">Mvc构建器</param>
            <returns>Mvc构建器</returns>
        </member>
        <member name="T:Gardener.Application.MyApplicationContext">
            <summary>
            应用静态资源
            </summary>
        </member>
        <member name="F:Gardener.Application.MyApplicationContext.apiResources">
            <summary>
            Api资源
            </summary>
        </member>
        <member name="M:Gardener.Application.MyApplicationContext.AddApiResource(Gardener.Core.Resource)">
            <summary>
            添加Api资源
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Gardener.Application.MyApplicationContext.GetApiResources">
            <summary>
            获取所有Api资源
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.ClassHourSettingService">
            <summary>
            课时设置服务
            </summary>
        </member>
        <member name="M:Gardener.Application.ClassHourSettingService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.ClassHourSetting})">
            <summary>
            课时设置服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.TutorialScheduleRuleService">
            <summary>
            上课安排规则服务
            </summary>
        </member>
        <member name="M:Gardener.Application.TutorialScheduleRuleService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.TutorialScheduleRule})">
            <summary>
            上课安排规则服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.ClassesService">
            <summary>
            班级服务
            </summary>
        </member>
        <member name="M:Gardener.Application.ClassesService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Classes})">
            <summary>
            班级服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.CurriculumService">
            <summary>
            课程服务
            </summary>
        </member>
        <member name="M:Gardener.Application.CurriculumService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Curriculum})">
            <summary>
            课程服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.GradeService">
            <summary>
            年级服务
            </summary>
        </member>
        <member name="M:Gardener.Application.GradeService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Grade})">
            <summary>
            年级服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.SchoolYearService">
            <summary>
            学年服务
            </summary>
        </member>
        <member name="M:Gardener.Application.SchoolYearService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.SchoolYear})">
            <summary>
            学年服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.SemesterService">
            <summary>
            学期服务
            </summary>
        </member>
        <member name="M:Gardener.Application.SemesterService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Semester})">
            <summary>
            老师服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.StudentService">
            <summary>
            学生服务
            </summary>
        </member>
        <member name="M:Gardener.Application.StudentService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Student})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.Application.StudentService.GetList(System.String)">
            <summary>
            通过名字获取
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.TeacherService">
            <summary>
            老师服务
            </summary>
        </member>
        <member name="M:Gardener.Application.TeacherService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Entites.Teacher})">
            <summary>
            老师服务
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.ServiceBase`3">
            <summary>
            继承此类即可实现基础方法
            方法包括：CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
            <typeparam name="TKey">数据实体主键类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.#ctor(Fur.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Insert(`1)">
            <summary>
            新增一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Update(`1)">
            <summary>
            更新一条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Delete(`2)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.Get(`2)">
            <summary>
            查询一条
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.GetAll">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.ServiceBase`3.GetPage(System.Int32,System.Int32)">
            <summary>
            分页查询
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.ServiceBase`1">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`1.#ctor(Fur.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.ServiceBase`2">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取 
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <typeparam name="TEntityDto">数据实体对应DTO类型</typeparam>
        </member>
        <member name="M:Gardener.Application.ServiceBase`2.#ctor(Fur.DatabaseAccessor.IRepository{`0})">
            <summary>
            继承此类即可实现基础方法
            CURD、获取全部、分页获取
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:Gardener.Application.LoginInput">
            <summary>
            登录输入参数
            </summary>
        </member>
        <member name="P:Gardener.Application.LoginInput.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Gardener.Application.LoginInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:Gardener.Application.LoginOutput">
            <summary>
            登录输出参数
            </summary>
        </member>
        <member name="P:Gardener.Application.LoginOutput.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Gardener.Application.LoginOutput.Account">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Gardener.Application.LoginOutput.AccessToken">
            <summary>
            Token
            </summary>
        </member>
        <member name="T:Gardener.Application.RoleDto">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:Gardener.Application.RoleDto.Id">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:Gardener.Application.RoleDto.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Gardener.Application.RoleDto.Remark">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="T:Gardener.Application.RoleInput">
            <summary>
            角色输入
            </summary>
        </member>
        <member name="P:Gardener.Application.RoleInput.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Gardener.Application.RoleInput.Remark">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="T:Gardener.Application.UserCenter.RoleService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenter.RoleService.#ctor(Fur.DatabaseAccessor.IRepository{Gardener.Core.Role})">
            <summary>
            角色服务
            </summary>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Gardener.Application.UserCenter.RoleService.Search(System.String,System.Int32,System.Int32)">
            <summary>
            搜索角色
            </summary>
            <param name="name">角色名称</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页大小</param>
            <returns></returns>
        </member>
        <member name="T:Gardener.Application.UserCenterService">
            <summary>
            用户中心服务
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Fur.DatabaseAccessor.IRepository{Gardener.Core.User},Fur.DatabaseAccessor.IRepository{Gardener.Core.Role},Fur.DatabaseAccessor.IRepository{Gardener.Core.UserRole},Fur.DatabaseAccessor.IRepository{Gardener.Core.RoleResource},Fur.DatabaseAccessor.IRepository{Gardener.Core.Resource},Gardener.Core.IAuthorizationManager,Microsoft.Extensions.Options.IOptions{Gardener.Core.SystemOptions})">
            <summary>
            角色管理服务
            </summary>
            <param name="httpContextAccessor"></param>
            <param name="userRepository"></param>
            <param name="roleRepository"></param>
            <param name="userRoleRepository"></param>
            <param name="roleSecurityRepository"></param>
            <param name="securityRepository"></param>
            <param name="authorizationManager"></param>
            <param name="systemOptions"></param>
        </member>
        <member name="M:Gardener.Application.UserCenterService.Login(Gardener.Application.LoginInput)">
            <summary>
            登录（免授权）
            </summary>
            <param name="input"></param>
            <remarks>管理员：admin/admin；普通用户：Fur/dotnetchina</remarks>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserCenterService.ViewRoles">
            <summary>
            查看用户角色
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.ViewSecuries">
            <summary>
            查看用户权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gardener.Application.UserCenterService.GetRoles">
            <summary>
            角色列表
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.InsertRole(Gardener.Application.RoleInput)">
            <summary>
            新增角色
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.GiveUserRole(System.Int32[])">
            <summary>
            为用户分配角色
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.GetSecurities">
            <summary>
            查看系统所有的权限
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.GiveRoleSecurity(System.Int32,System.Int32[])">
            <summary>
            为角色分配权限
            </summary>
        </member>
        <member name="M:Gardener.Application.UserCenterService.InitResource">
            <summary>
            初始化系统挨批资源权限
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
